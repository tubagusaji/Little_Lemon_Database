-- MySQL Script generated by MySQL Workbench
-- Tue May 30 17:15:53 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema db-capstone
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema db-capstone
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db-capstone` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `db-capstone` ;

-- -----------------------------------------------------
-- Table `db-capstone`.`Customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db-capstone`.`Customers` (
  `CustomerID` INT NOT NULL AUTO_INCREMENT,
  `FullName` VARCHAR(255) NOT NULL,
  `ContactNumber` VARCHAR(45) NULL DEFAULT NULL,
  `Email` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`CustomerID`),
  UNIQUE INDEX `CustomerID_UNIQUE` (`CustomerID` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 8
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `db-capstone`.`Bookings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db-capstone`.`Bookings` (
  `BookingID` INT NOT NULL AUTO_INCREMENT,
  `TableNumber` INT NOT NULL,
  `BookingDate` DATE NOT NULL,
  `CustomerID` INT NULL DEFAULT NULL,
  PRIMARY KEY (`BookingID`),
  UNIQUE INDEX `BookingID_UNIQUE` (`BookingID` ASC) VISIBLE,
  INDEX `customerID_idx` (`CustomerID` ASC) VISIBLE,
  CONSTRAINT `customerID`
    FOREIGN KEY (`CustomerID`)
    REFERENCES `db-capstone`.`Customers` (`CustomerID`))
ENGINE = InnoDB
AUTO_INCREMENT = 14
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `db-capstone`.`MenuItem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db-capstone`.`MenuItem` (
  `ItemID` INT NOT NULL AUTO_INCREMENT,
  `ItemName` VARCHAR(45) NOT NULL,
  `Price` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ItemID`),
  UNIQUE INDEX `ItemID_UNIQUE` (`ItemID` ASC) VISIBLE,
  UNIQUE INDEX `ItemName_UNIQUE` (`ItemName` ASC) VISIBLE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `db-capstone`.`Menu`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db-capstone`.`Menu` (
  `MenuID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Type` VARCHAR(45) NOT NULL,
  `ItemID` INT NULL DEFAULT NULL,
  PRIMARY KEY (`MenuID`),
  UNIQUE INDEX `MenuID_UNIQUE` (`MenuID` ASC) VISIBLE,
  UNIQUE INDEX `Name_UNIQUE` (`Name` ASC) VISIBLE,
  INDEX `menu_items_idx` (`ItemID` ASC) VISIBLE,
  CONSTRAINT `menu_items`
    FOREIGN KEY (`ItemID`)
    REFERENCES `db-capstone`.`MenuItem` (`ItemID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `db-capstone`.`Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db-capstone`.`Orders` (
  `DeliveryID` INT NOT NULL AUTO_INCREMENT,
  `OrderID` INT NOT NULL,
  `DeliveryDate` DATE NOT NULL,
  `Status` TINYINT(1) NOT NULL,
  `MenuID` INT NOT NULL,
  `BookingID` INT NOT NULL,
  PRIMARY KEY (`DeliveryID`),
  UNIQUE INDEX `OrderID_UNIQUE` (`DeliveryID` ASC) VISIBLE,
  INDEX `order_id_idx` (`OrderID` ASC) VISIBLE,
  INDEX `menuItem_idx` (`MenuID` ASC) VISIBLE,
  INDEX `bookingid_idx` (`BookingID` ASC) VISIBLE,
  CONSTRAINT `bookingid`
    FOREIGN KEY (`BookingID`)
    REFERENCES `db-capstone`.`Bookings` (`BookingID`),
  CONSTRAINT `menuItem`
    FOREIGN KEY (`MenuID`)
    REFERENCES `db-capstone`.`Menu` (`MenuID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `db-capstone`.`Delivery`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db-capstone`.`Delivery` (
  `DeliveryID` INT NOT NULL AUTO_INCREMENT,
  `OrderID` INT NOT NULL,
  `DeliveryDate` DATE NULL DEFAULT NULL,
  `Status` TINYINT(1) NULL DEFAULT NULL,
  PRIMARY KEY (`DeliveryID`),
  INDEX `order_id_idx` (`OrderID` ASC) VISIBLE,
  CONSTRAINT `order_id`
    FOREIGN KEY (`OrderID`)
    REFERENCES `db-capstone`.`Orders` (`OrderID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

USE `db-capstone` ;

-- -----------------------------------------------------
-- procedure AddBooking
-- -----------------------------------------------------

DELIMITER $$
USE `db-capstone`$$
CREATE DEFINER=`emma`@`192.168.44.1` PROCEDURE `AddBooking`(in booking_id int, in tableNmber int,  in booking_date date,  in customer_id int)
BEGIN
declare fullname varchar(255);

insert into Bookings values
(booking_id, tableNmber, booking_date, customer_id );

select concat('Booking ', ' has been successfully added with ID ', booking_id) as Message;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure CancelBooking
-- -----------------------------------------------------

DELIMITER $$
USE `db-capstone`$$
CREATE DEFINER=`emma`@`192.168.44.1` PROCEDURE `CancelBooking`(in booking_id int)
BEGIN
delete from  Bookings
where BookingID = booking_id;

select concat('Booking ', booking_id, ' deleted');
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure UpdateBooking
-- -----------------------------------------------------

DELIMITER $$
USE `db-capstone`$$
CREATE DEFINER=`emma`@`192.168.44.1` PROCEDURE `UpdateBooking`(in booking_id int, in booking_date date )
BEGIN
Update Bookings
set BookingDate = booking_date
where BookingID = booking_date;

select concat('Booking ', booking_id, ' updated');
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
